{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Arial-BoldMT;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red1\green22\blue40;\red255\green255\blue255;\red13\green62\blue197;
}
{\*\expandedcolortbl;;\cssrgb\c0\c11373\c20784;\cssrgb\c100000\c100000\c100000;\cssrgb\c4314\c34118\c81569;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\b\fs32 \cf2 \cb3 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 "O" stands for "order":
\f1\b0 \cb1 \uc0\u8232 \AppleTypeServices\AppleTypeServicesF65539 \cb3 It represents the general pattern of how the runtime grows, not the exact time it takes to run.\'a0\cf4 \cb1 \strokec4 \uc0\u8232 \cf2 \strokec2 \uc0\u8232 \u8232 \u8232 \u8232 \AppleTypeServices \uc0\u8232 \
\ls1\ilvl0
\f0\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Common Big O notations:
\f1\b0 \AppleTypeServices\AppleTypeServicesF65539 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls1\ilvl1
\f0\b \AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(1):
\f1\b0 \AppleTypeServices\AppleTypeServicesF65539 \'a0Constant time - Takes the same amount of time regardless of input size (like accessing a single element in an array).\'a0\cf4 \cb1 \strokec4 \uc0\u8232 \cf2 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl1
\f0\b \AppleTypeServices\AppleTypeServicesF65539 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(log n):
\f1\b0 \AppleTypeServices\AppleTypeServicesF65539 \'a0Logarithmic time - Time grows slowly as input size increases (like searching a sorted list using binary search).\'a0\cf4 \cb1 \strokec4 \uc0\u8232 \cf2 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl1
\f0\b \AppleTypeServices\AppleTypeServicesF65539 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(n):
\f1\b0 \AppleTypeServices\AppleTypeServicesF65539 \'a0Linear time - Time grows proportionally to the input size (like iterating through all elements in a list).\'a0\cf4 \cb1 \strokec4 \uc0\u8232 \cf2 \strokec2 \uc0\u8232 \u8232 \
\ls1\ilvl1
\f0\b \AppleTypeServices\AppleTypeServicesF65539 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(n log n):
\f1\b0 \AppleTypeServices\AppleTypeServicesF65539 \'a0Log-linear time - Slightly slower than linear, often seen in efficient sorting algorithms.\'a0\cf4 \cb1 \strokec4 \uc0\u8232 \cf2 \strokec2 \uc0\u8232 \u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1
\f0\b \AppleTypeServices\AppleTypeServicesF65539 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(n^2):
\f1\b0 \AppleTypeServices\AppleTypeServicesF65539 \'a0Quadratic time - Time grows exponentially with the square of the input size (like nested loops).\'a0\cf4 \cb1 \strokec4 \uc0\u8232 \cf2 \strokec2 \uc0\u8232 \u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \AppleTypeServices \uc0\u8232 \
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 \cb3 Example:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\fs32 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Imagine searching for a specific name in a phonebook.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa160\partightenfactor0
\ls2\ilvl1
\f0\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(1):
\f1\b0 \'a0If you know the exact page and name, you can find it immediately.\cb1 \
\ls2\ilvl1
\f0\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(n):
\f1\b0 \'a0If you have to flip through each page to find the name, the time to find it grows linearly with the number of pages.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1
\f0\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 O(n^2):
\f1\b0 \'a0If you have to check every possible combination of names on each page, the time grows much faster as the number of pages increases.\'a0\cb1 \
}